amf:
  config:
    guamiList:
    - amf_id:
        region: 2
        set: 1
      plmn_id:
        mcc: '999'
        mnc: '70'
    plmnList:
    - plmn_id:
        mcc: '999'
        mnc: '70'
      s_nssai:
      - sd: '0x111111'
        sst: 1
    taiList:
    - plmn_id:
        mcc: '999'
        mnc: '70'
      tac:
      - 1
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
ausf:
<<<<<<< HEAD
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
bsf:
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
=======
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}
bsf:
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}
nrf:
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}
pcf:
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}

>>>>>>> main
hss:
  enabled: false
mme:
  enabled: false
nrf:
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
nssf:
  config:
    nsiList:
    - nrf:
        hostname: ''
        port: 7777
      sd: '0x111111'
      sst: 1
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
pcf:
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
pcrf:
  enabled: false
populate:
  enabled: true
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
sgwc:
  enabled: false
sgwu:
  enabled: false
smf:
  config:
    pcrf:
      enabled: false
<<<<<<< HEAD
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
udm:
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
udr:
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
upf:
=======
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}

sgwc:
  enabled: false

sgwu:
  enabled: false

amf:
  config:
    guamiList:
      - plmn_id:
          mcc: "999"
          mnc: "70"
        amf_id:
          region: 2
          set: 1
    taiList:
      - plmn_id:
          mcc: "999"
          mnc: "70"
        tac: [1]
    plmnList:
      - plmn_id:
          mcc: "999"
          mnc: "70"
        s_nssai:
          - sst: 1
            sd: "0x111111"
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}

udr:
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}

udm:
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}

upf:
  replicaCount: 1

# uncomment below line to select a single node
#  nodeSelector: {eks.amazonaws.com/nodegroup : upf-bedc-small}

  # affinity logic to deploy pods in multiple nodegroups
>>>>>>> main
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: upfInstanceSize
            operator: In
            values:
<<<<<<< HEAD
            - Large
  replicaCount: 1
=======
            - Small
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - upf
          topologyKey: kubernetes.io/hostname

nssf:
  config:
    nsiList:
      - nrf:
          hostname: ""  # if empty default is autogenerated open5gs svc fullname
          port: 7777
        sst: 1
        sd: "0x111111"
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}

>>>>>>> main
webui:
  enabled: false
  ingress:
    enabled: false
<<<<<<< HEAD
  nodeSelector:
    eks.amazonaws.com/nodegroup: control-plane
=======
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}

populate:
  enabled: true
  nodeSelector: {eks.amazonaws.com/nodegroup : control-plane}
>>>>>>> main
